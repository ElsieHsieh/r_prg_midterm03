rm(list=ls(all.names=TRUE))
library(XML)
library(RCurl)
Sys.setlocale(category = "LC_ALL", locale = "cht")
url <- 'http://portal.emic.gov.tw/pub/DSP/OpenData/DIM/Disaster.xml'
xmldoc <- xmlParse(url, encoding = "utf8")
ID <- xpathSApply(xmldoc,"//emic:CASE_ID",xmlValue)
DT <- xpathSApply(xmldoc,"//emic:CASE_DT",xmlValue)
COUNTY <- xpathSApply(xmldoc,"//emic:COUNTY_N",xmlValue)
TOWN <- xpathSApply(xmldoc,"//emic:TOWN_N",xmlValue)
LOC <- xpathSApply(xmldoc,"//emic:CASE_LOC",xmlValue)
GEOMETRY_TYPE <- xpathSApply(xmldoc,"//emic:GEOMETRY_TYPE",xmlValue)
LonLat <- xpathSApply(xmldoc,"//emic:COORDINATE",xmlValue)
MAIN_TYPE <- xpathSApply(xmldoc,"//emic:DISASTER_MAIN_TYPE",xmlValue)
SUB_TYPE <- xpathSApply(xmldoc,"//emic:DISASTER_SUB_TYPE",xmlValue)
STATUS <- xpathSApply(xmldoc,"//emic:CASE_STATUS",xmlValue)
SOURCE <- xpathSApply(xmldoc,"//emic:SOURCE_TYPE",xmlValue)
INJURED_NO <- xpathSApply(xmldoc,"//emic:INJURED_NO",xmlValue) #人員受傷
DEATH_NO <- xpathSApply(xmldoc,"//emic:DEATH_NO",xmlValue)
TRAPPED_NO <- xpathSApply(xmldoc,"//emic:TRAPPED_NO",xmlValue) #人員受困
MISSING_NO <- xpathSApply(xmldoc,"//emic:MISSING_NO",xmlValue)
SHELTER_NO <- xpathSApply(xmldoc,"//emic:SHELTER_NO",xmlValue) #人員收容
IS_TRAFFIC <- xpathSApply(xmldoc,"//emic:IS_TRAFFIC",xmlValue)
IS_SERIOUS <- xpathSApply(xmldoc,"//emic:IS_SERIOUS",xmlValue)
alldata <- data.frame(ID,DT,COUNTY,TOWN,LOC,GEOMETRY_TYPE,LonLat,MAIN_TYPE,SUB_TYPE,STATUS,SOURCE,INJURED_NO,DEATH_NO,TRAPPED_NO,MISSING_NO,SHELTER_NO,IS_TRAFFIC,IS_SERIOUS)
if(file.exists("C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/NFA1129_1905.csv")){
YN=FALSE
}else YN=TRUE
write.table(alldata, file = "C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/NFA1129_1905.csv",append=TRUE,sep=",",row.names = FALSE,col.names= YN)
#C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/NFA1129_1905.csv
#xmldoc <- xmlParse(url, encoding = "utf8")
#data <- xmlApply(getNodeSet(xmldoc,"//emic:DISASTER_DATA"), xmlAttrs)
rm(list=ls(all.names=TRUE))
library(XML)
library(RCurl)
Sys.setlocale(category = "LC_ALL", locale = "cht")
url <- 'http://portal.emic.gov.tw/pub/DSP/OpenData/DIM/Disaster.xml'
xmldoc <- xmlParse(url, encoding = "utf8")
ID <- xpathSApply(xmldoc,"//emic:CASE_ID",xmlValue)
DT <- xpathSApply(xmldoc,"//emic:CASE_DT",xmlValue)
COUNTY <- xpathSApply(xmldoc,"//emic:COUNTY_N",xmlValue)
TOWN <- xpathSApply(xmldoc,"//emic:TOWN_N",xmlValue)
LOC <- xpathSApply(xmldoc,"//emic:CASE_LOC",xmlValue)
GEOMETRY_TYPE <- xpathSApply(xmldoc,"//emic:GEOMETRY_TYPE",xmlValue)
LonLat <- xpathSApply(xmldoc,"//emic:COORDINATE",xmlValue)
MAIN_TYPE <- xpathSApply(xmldoc,"//emic:DISASTER_MAIN_TYPE",xmlValue)
SUB_TYPE <- xpathSApply(xmldoc,"//emic:DISASTER_SUB_TYPE",xmlValue)
STATUS <- xpathSApply(xmldoc,"//emic:CASE_STATUS",xmlValue)
SOURCE <- xpathSApply(xmldoc,"//emic:SOURCE_TYPE",xmlValue)
INJURED_NO <- xpathSApply(xmldoc,"//emic:INJURED_NO",xmlValue) #人員受傷
DEATH_NO <- xpathSApply(xmldoc,"//emic:DEATH_NO",xmlValue)
TRAPPED_NO <- xpathSApply(xmldoc,"//emic:TRAPPED_NO",xmlValue) #人員受困
MISSING_NO <- xpathSApply(xmldoc,"//emic:MISSING_NO",xmlValue)
SHELTER_NO <- xpathSApply(xmldoc,"//emic:SHELTER_NO",xmlValue) #人員收容
IS_TRAFFIC <- xpathSApply(xmldoc,"//emic:IS_TRAFFIC",xmlValue)
IS_SERIOUS <- xpathSApply(xmldoc,"//emic:IS_SERIOUS",xmlValue)
alldata <- data.frame(ID,DT,COUNTY,TOWN,LOC,GEOMETRY_TYPE,LonLat,MAIN_TYPE,SUB_TYPE,STATUS,SOURCE,INJURED_NO,DEATH_NO,TRAPPED_NO,MISSING_NO,SHELTER_NO,IS_TRAFFIC,IS_SERIOUS)
if(file.exists("C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/NFA1129_1905.csv")){
YN=FALSE
}else YN=TRUE
write.table(alldata, file = "C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/NFA1129_1905.csv",append=TRUE,sep=",",row.names = FALSE,col.names= YN)
#C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/NFA1129_1905.csv
#xmldoc <- xmlParse(url, encoding = "utf8")
#data <- xmlApply(getNodeSet(xmldoc,"//emic:DISASTER_DATA"), xmlAttrs)
View(alldata)
rm(list=ls(all.names=TRUE))
library(XML)
library(RCurl)
Sys.setlocale(category = "LC_ALL", locale = "cht")
url <- 'http://portal.emic.gov.tw/pub/DSP/OpenData/DIM/Disaster.xml'
xmldoc <- xmlParse(url, encoding = "utf8")
ID <- xpathSApply(xmldoc,"//emic:CASE_ID",xmlValue)
DT <- xpathSApply(xmldoc,"//emic:CASE_DT",xmlValue)
COUNTY <- xpathSApply(xmldoc,"//emic:COUNTY_N",xmlValue)
TOWN <- xpathSApply(xmldoc,"//emic:TOWN_N",xmlValue)
LOC <- xpathSApply(xmldoc,"//emic:CASE_LOC",xmlValue)
GEOMETRY_TYPE <- xpathSApply(xmldoc,"//emic:GEOMETRY_TYPE",xmlValue)
LonLat <- xpathSApply(xmldoc,"//emic:COORDINATE",xmlValue)
MAIN_TYPE <- xpathSApply(xmldoc,"//emic:DISASTER_MAIN_TYPE",xmlValue)
SUB_TYPE <- xpathSApply(xmldoc,"//emic:DISASTER_SUB_TYPE",xmlValue)
STATUS <- xpathSApply(xmldoc,"//emic:CASE_STATUS",xmlValue)
SOURCE <- xpathSApply(xmldoc,"//emic:SOURCE_TYPE",xmlValue)
INJURED_NO <- xpathSApply(xmldoc,"//emic:INJURED_NO",xmlValue) #人員受傷
DEATH_NO <- xpathSApply(xmldoc,"//emic:DEATH_NO",xmlValue)
TRAPPED_NO <- xpathSApply(xmldoc,"//emic:TRAPPED_NO",xmlValue) #人員受困
MISSING_NO <- xpathSApply(xmldoc,"//emic:MISSING_NO",xmlValue)
SHELTER_NO <- xpathSApply(xmldoc,"//emic:SHELTER_NO",xmlValue) #人員收容
IS_TRAFFIC <- xpathSApply(xmldoc,"//emic:IS_TRAFFIC",xmlValue)
IS_SERIOUS <- xpathSApply(xmldoc,"//emic:IS_SERIOUS",xmlValue)
alldata <- data.frame(ID,DT,COUNTY,TOWN,LOC,GEOMETRY_TYPE,LonLat,MAIN_TYPE,SUB_TYPE,STATUS,SOURCE,INJURED_NO,DEATH_NO,TRAPPED_NO,MISSING_NO,SHELTER_NO,IS_TRAFFIC,IS_SERIOUS)
if(file.exists("C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/NFA1201_0023.csv")){
YN=FALSE
}else YN=TRUE
write.table(alldata, file = "C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/NFA1201_0023.csv",append=TRUE,sep=",",row.names = FALSE,col.names= YN)
#C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/NFA1129_1905.csv
#xmldoc <- xmlParse(url, encoding = "utf8")
#data <- xmlApply(getNodeSet(xmldoc,"//emic:DISASTER_DATA"), xmlAttrs)
source('C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/R/NFA_Disaster_Parse.R', echo=TRUE)
source('C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/R/NFA_Disaster_Parse.R', echo=TRUE)
source('C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/R/NFA_Disaster_Parse.R', echo=TRUE)
rm(list=ls(all.names=TRUE))
library(XML)
library(RCurl)
Sys.setlocale(category = "LC_ALL", locale = "cht")
url <- 'http://portal.emic.gov.tw/pub/DSP/OpenData/DIM/Disaster.xml'
xmldoc <- xmlParse(url, encoding = "utf8")
ID <- xpathSApply(xmldoc,"//emic:CASE_ID",xmlValue)
DT <- xpathSApply(xmldoc,"//emic:CASE_DT",xmlValue)
COUNTY <- xpathSApply(xmldoc,"//emic:COUNTY_N",xmlValue)
TOWN <- xpathSApply(xmldoc,"//emic:TOWN_N",xmlValue)
LOC <- xpathSApply(xmldoc,"//emic:CASE_LOC",xmlValue)
GEOMETRY_TYPE <- xpathSApply(xmldoc,"//emic:GEOMETRY_TYPE",xmlValue)
LonLat <- xpathSApply(xmldoc,"//emic:COORDINATE",xmlValue)
MAIN_TYPE <- xpathSApply(xmldoc,"//emic:DISASTER_MAIN_TYPE",xmlValue)
SUB_TYPE <- xpathSApply(xmldoc,"//emic:DISASTER_SUB_TYPE",xmlValue)
STATUS <- xpathSApply(xmldoc,"//emic:CASE_STATUS",xmlValue)
SOURCE <- xpathSApply(xmldoc,"//emic:SOURCE_TYPE",xmlValue)
INJURED_NO <- xpathSApply(xmldoc,"//emic:INJURED_NO",xmlValue) #人員受傷
DEATH_NO <- xpathSApply(xmldoc,"//emic:DEATH_NO",xmlValue)
TRAPPED_NO <- xpathSApply(xmldoc,"//emic:TRAPPED_NO",xmlValue) #人員受困
MISSING_NO <- xpathSApply(xmldoc,"//emic:MISSING_NO",xmlValue)
SHELTER_NO <- xpathSApply(xmldoc,"//emic:SHELTER_NO",xmlValue) #人員收容
IS_TRAFFIC <- xpathSApply(xmldoc,"//emic:IS_TRAFFIC",xmlValue)
IS_SERIOUS <- xpathSApply(xmldoc,"//emic:IS_SERIOUS",xmlValue)
alldata <- data.frame(ID,DT,COUNTY,TOWN,LOC,GEOMETRY_TYPE,LonLat,MAIN_TYPE,SUB_TYPE,STATUS,SOURCE,INJURED_NO,DEATH_NO,TRAPPED_NO,MISSING_NO,SHELTER_NO,IS_TRAFFIC,IS_SERIOUS)
if(file.exists("C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/NFA.csv")){
YN=FALSE
}else YN=TRUE
write.table(alldata, file = "C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/NFA.csv",append=TRUE,sep=" ",row.names = FALSE,col.names= YN)
source('C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/R/NFA_Disaster_Parse.R', echo=TRUE)
source('C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/R/NFA_Disaster_Parse.R', echo=TRUE)
source('C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/R/NFA_Disaster_Parse.R', echo=TRUE)
source('C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/R/NFA_Disaster_Parse.R', echo=TRUE)
source('C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/R/NFA_Disaster_Parse.R', echo=TRUE)
source('C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/R/NFA_Disaster_Parse.R', echo=TRUE)
source('D:/L_Coding/EQ26/ppt/index.r', echo=TRUE)
rm(list=ls(all=TRUE))
library(readr)
require(devtools)
library(rCharts)
dataSET <- iris
names(dataSET) <- gsub("\\.","", names(dataSET))
iriplot <- rPlot(SepalLength ~ SepalWidth | Species,
data = dataSET, color = "Species", type = "point")
iriplot$save("iriplot.html",standalone = TRUE)
iriplot <- rPlot(SepalLength ~ SepalWidth | Species,
data = dataSET, color = "Species", type = "point")
library(rCharts)
dataSET <- iris
names(dataSET) <- gsub("\\.","", names(dataSET))
iriplot <- rPlot(SepalLength ~ SepalWidth | Species,
data = dataSET, color = "Species", type = "point")
iriplot$save("iriplot.html",standalone = TRUE)
write.table(alldata, file = "C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/NFA1207.csv",append=TRUE,sep=",",row.names = FALSE,col.names= YN)
rm(list=ls(all.names=TRUE))
source('C:/Users/USER/Google 雲端硬碟/Grad/Thesis/NFAparse/R/NFA_Disaster_Parse.R', echo=TRUE)
install.packages("tidyverse")
head(faithful)
str(faithful)
View(faithful)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', echo=TRUE)
ggplot(mpg,aes(x=displ,y=hwy))+geom_point()
str(mpg)
View(mpg)
ggplot(mpg,aes(x=displ,y=hwy,color=drv))+geom_point()
ggplot(mpg,aes(x=displ,y=hwy,shape=drv))+geom_point()
ggplot(mpg,aes(x=displ,y=hwy,shape=class)+geom_point()
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', echo=TRUE)
ggplot(mpg,aes(x=displ,y=hwy,shape=drv, color=class))+geom_point()+
geom_smooth(method=lm)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', echo=TRUE)
mpg[mpg$hwy>30,]
mpg$hwy>30
str(mpg)
view(mpg)
View(mpg)
filter(mpg,hwy>30)
mpg %>% filter(hwy>30)
install.packages("dplyr")
filter(mpg,hwy>30)
library(dplyr)
filter(mpg,hwy>30)
filter(mpg,hwy>30 & class==compact)
filter(mpg,hwy>30 & class=="compact")
View(diamonds)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', echo=TRUE)
diamono
diamonds %>% group_by(cut) %>% summarise(price=mean(price))
diamonds %>% group_by(cut) %>% summarise(price=mean(price)) %>% ggplot(aes(price))+geom_point()
diamonds %>% group_by(cut) %>% summarise(price=mean(price)) %>% ggplot(aes(price))+geom_histogram()
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', encoding = 'UTF-8', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', encoding = 'UTF-8', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', encoding = 'UTF-8', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', encoding = 'UTF-8', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', encoding = 'UTF-8', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', encoding = 'UTF-8', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', encoding = 'UTF-8', echo=TRUE)
source('D:/L_Coding/R/1221台灣資料科學年會/Rpractise.R', encoding = 'UTF-8', echo=TRUE)
data()
?cars
cars
View(cars)
?head
head(iris,n=10)
View(head(iris,n=10))
dim(cars)
dim(iris)
summary(iris)
str(iris)
?plot
cars$[1]
cars$speed
plot(cars$speed,cars$dist)
?plot
plot(cars$speed,cars$dist,main="cars chart", xlab="Speed",ylab = "Dist")
plot(cars$speed,cars$dist,main="cars chart", xlab="Speed",ylab = "Dist",col="red")
plot(iris$Sepal.Length,iris$Sepal.Width,main="Iris Sepal Length and Width",xlab = "Length",ylab = "Width",col="blue")
plot(iris$Sepal.Length,iris$Sepal.Width,type="b",main="Iris Sepal Length and Width",xlab = "Length",ylab = "Width",col="blue")
plot(iris$Sepal.Length,iris$Sepal.Width,type="l",main="Iris Sepal Length and Width",xlab = "Length",ylab = "Width",col="blue")
plot(cars$speed,cars$dist,type="l",main="cars chart", xlab="Speed",ylab = "Dist")
plot(iris$Sepal.Length,iris$Sepal.Width,type="l",main="Iris Sepal Length and Width",xlab = "Length",ylab = "Width",col="blue")
plot(iris$Sepal.Length,iris$Sepal.Width,type="p",main="Iris Sepal Length and Width",xlab = "Length",ylab = "Width",col="blue")
plot(cars$speed,cars$dist,type="h",main="cars chart", xlab="Speed",ylab = "Dist")
plot(cars$speed,cars$dist,type="h",main="cars chart", xlab="Speed",ylab = "Dist",lwd=10)
plot(cars$speed,cars$dist,type="h",main="cars chart", xlab="Speed",ylab = "Dist",lwd=10,col="dark red")
plot(cars$speed,cars$dist,type="l",main="cars chart", xlab="Speed",ylab = "Dist",lwd=10,col="dark red")
plot(cars$speed,cars$dist,type="l",main="cars chart", xlab="Speed",ylab = "Dist",lwd=5,col="dark red")
plot(cars$speed,cars$dist,type="p",main="cars chart", xlab="Speed",ylab = "Dist",lwd=5,col="dark red")
plot(cars$speed,cars$dist,type="l",main="cars chart", xlab="Speed",ylab = "Dist",lwd=5,col="green")
plot(cars$speed,cars$dist,type="b",main="cars chart", xlab="Speed",ylab = "Dist",lwd=3,col="dark red")
plot(cars$speed,cars$dist,type="b",main="cars chart", xlab="Speed",ylab = "Dist",lwd=3,col="dark red",pch=4)
?hist
hist(cars$speed)
?hist
hist(cars$speed,breaks=10)
hist(cars$speed,breaks=8)
hist(cars$speed,breaks=16)
hist(cars$speed,breaks=12)
hist(cars$speed,breaks=12)
?par
n <- 100
runif(100)
hist(n)
n <- 100
hist(runif(n))
n <- 10000
hist(runif(n))
?rnorm
n <- 10000
hist(rnorm(n))
n <- 100
hist(runif(n),main = paste("Distribution of", n, "uniformly distributed variables"))
n <- 1000
hist(runif(n),main = paste("Distribution of", n, "uniformly distributed variables"))
paste("hello","world","!")
par(mfrow=c(1,2))
boxplot(cars$speed)
boxplot(cars$dist)
boxplot(cars$dist,main="speed")
boxplot(cars$dist,main <- "dist")
par(mfrow=c(1,2))
boxplot(cars$dist,main <- "speed")
boxplot(cars$dist,main="speed")
par(mfrow=c(1,2))
boxplot(cars$speed,main="speed")
boxplot(iris$Sepal.Length ~ iris$Species)
boxplot(iris$Sepal.Length ~ iris$Species)
boxplot(iris$Sepal.Length ~ iris$Species,width=100)
?boxplot
boxplot(iris$Sepal.Length ~ iris$Species,width=NULL)
boxplot(iris$Sepal.Length ~ iris$Species,width=2)
boxplot(iris$Sepal.Length ~ iris$Species,width)
?boxplot
par(mfrow=c(2,2))
boxplot(iris$Sepal.Length ~ iris$Species)
boxplot(iris$Sepal.Width ~ iris$Species)
boxplot(iris$Sepal.Length ~ iris$Species)
boxplot(iris$Sepal.Width ~ iris$Species)
str(mtcars)
factor(mtcars$gear)
summary(factor(mtcars$gear))
table(factor(mtcars$gear))
boxplot(table(factor(mtcars$gear)))
barplot(table(factor(mtcars$gear)))
par(mfrow=c(1,1))
barplot(table(factor(mtcars$gear)))
row.names(mtcars)
vnames <- row.names(mtcars)
barplot(mtcars$hp,names.arg = vnames)
barplot(mtcars$hp,names.arg = vnames,horiz = TRUE)
?barplot
?par
barplot(mtcars$hp,names.arg = vnames,horiz = TRUE,las=1)
barplot(mtcars$hp,names.arg = vnames,horiz = TRUE,las=1,cex.names = 0.5)
barplot(mtcars$hp,names.arg = vnames,horiz = TRUE,las=1,cex.names = 0.5,cex.axis = 2)
barplot(mtcars$hp,names.arg = vnames,horiz = TRUE,las=1,cex.names = 0.5,cex.axis = 1)
barplot(mtcars$hp,names.arg = vnames,horiz = TRUE,las=1,cex.names = 0.2,cex.axis = 1)
barplot(mtcars$hp,names.arg = vnames,horiz = TRUE,las=1,cex.names = 0.3,cex.axis = 1)
barplot(mtcars$hp,names.arg = vnames,horiz = TRUE,las=1,cex.names = 0.4,cex.axis = 1)
barplot(mtcars$hp,names.arg = vnames,horiz = TRUE,las=1,cex.names = 0.8,cex.axis = 1)
barplot(mtcars$hp,names.arg = vnames,horiz = TRUE,las=1,cex.names = 0.4,cex.axis = 1,width=2)
barplot(mtcars$hp,names.arg = vnames,horiz = TRUE,las=1,cex.names = 0.5,cex.axis = 1,width=2)
factor(mtcars)
factor(mtcars$mpg)
my_vec <- c(1L,2.02,TRUE)
class(my_vec)
rm(list=ls())
my_vec <- c(1L,2.02,TRUE)
my_vec
my_vec[1]
my_vec[2]
dim(mtcars)
dim(mtcars)
?dim
dim(my_vec)
dim(cars)
my_vec[2:3]
my_vec[c(1,3)]
my_vec[-3]
length(my_vec)
CO2$conc[length(CO2$conc)]
View(CO2)
dim(CO2)
dim(my_vec)
length(my_vec)
my_vec <- 1:20
my_vec[15:20]
my_vec <- c(2,34,55,3,1)
my_vec <- cars$
dist
my_vec <- cars$dist
length(my_vec)
my_vec[my_vec>50]
sort(my_vec[my_vec>50])
seq(from = 0,to = 100, by=3)
seq(from = 1,to = 100, by=3)
View(csv_df)
View(csv_df)
View(csv_df)
head(csv_df)
csv_df <- read.csv("dailyrainfall.csv")
head(csv_df)
csv_df
csv_df
setwd("D:/L_Coding/R/r_prg")
head(economics)
ggplot(economics, aes(x = date, y = unemploy)) +
geom_line()
library(ggplot2)
head(economics)
ggplot(economics, aes(x = date, y = unemploy)) +
geom_line()
ggplot(economics, aes(x = date, y = unemploy)) +
geom_line(color="blue")
ggplot(economics, aes(x = date, y = unemploy)) +
geom_line(color="red")
ggplot(economics, aes(x = date, y = unemploy)) +
geom_line(color=pce)
ggplot(economics, aes(x = date, y = unemploy)) +
geom_line(color=date)
ggplot(economics, aes(x = date, y = unemploy)) +
geom_line(color=date)
ggplot(iris, aes(x = Sepal.Length)) +
geom_histogram() +
facet_wrap(~ Species,ncow=1)
ggplot(iris, aes(x = Sepal.Length)) +
geom_histogram() +
facet_wrap(~ Species,ncol =1)
ggplot(iris, aes(x = Sepal.Length)) +
geom_histogram() +
facet_wrap(~ Species)
source('D:/L_Coding/R/r_prg/midterm_02/midterm_02.R', encoding = 'UTF-8', echo=TRUE)
source('D:/L_Coding/R/r_prg/midterm_02/midterm_02.R', encoding = 'UTF-8', echo=TRUE)
setwd("D:/L_Coding/R/r_prg/midterm_02")
source('D:/L_Coding/R/r_prg/midterm_02/midterm_02.R', encoding = 'UTF-8', echo=TRUE)
setwd("D:/L_Coding/R/r_prg")
knit_with_parameters('D:/L_Coding/R/r_prg/RMD_PPT_DEMO.Rmd', encoding = 'UTF-8')
cars
setwd("D:/L_Coding/R/r_prg/midterm_03")
